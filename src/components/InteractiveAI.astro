---
// src/components/InteractiveAI.astro

const BotIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 8V4H8"/><rect width="16" height="12" x="4" y="8" rx="2"/><path d="M2 14h2"/><path d="M20 14h2"/><path d="M15 13v2"/><path d="M9 13v2"/></svg>`;
const MessageIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/></svg>`;
const ArrowRightIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="5" y1="12" x2="19" y2="12"/><polyline points="12 5 19 12 12 19"/></svg>`;
const SparklesIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/></svg>`;
---

<section id="interactive-ai-wrapper" class="py-24 px-4 bg-gradient-to-br from-slate-900 via-purple-950/20 to-slate-900 relative overflow-hidden">
    {/* Background Effects */}
    <div class="absolute inset-0 bg-gradient-to-r from-purple-600/5 via-transparent to-blue-500/5"></div>
    <div class="absolute top-1/3 left-1/3 w-80 h-80 bg-purple-500/10 rounded-full blur-3xl animate-pulse"></div>
    
    <div class="max-w-4xl mx-auto relative z-10">
        
        {/* Header */}
        <div class="text-center mb-12">
            <div class="inline-flex items-center gap-2 bg-purple-500/20 backdrop-blur-sm border border-purple-500/30 rounded-full px-6 py-3 mb-8">
                <span class="w-5 h-5 text-purple-400" set:html={BotIcon}></span>
                <span class="text-sm font-medium text-purple-200">
                    IA Interativa
                </span>
            </div>
            
            <h2 class="text-4xl md:text-5xl font-bold mb-6 leading-tight">
                <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent">
                    Descreva sua demanda
                </span>
            </h2>
            
            <p class="text-lg text-slate-300 max-w-2xl mx-auto leading-relaxed">
                Nossa IA entende sua necessidade e conecta você diretamente com o especialista certo.
            </p>
        </div>

        {/* Chat Interface */}
        <div class="space-y-6">
            {/* Input Area */}
            <div class="relative">
                <div class="flex gap-3 bg-slate-800/50 backdrop-blur-xl border border-slate-700/50 rounded-2xl p-4 shadow-2xl">
                    <div class="flex-1">
                        <input
                            type="text"
                            id="aiInput"
                            placeholder="Ex: Quero abrir uma empresa de tecnologia"
                            class="w-full bg-transparent text-white placeholder:text-slate-400 text-lg focus:outline-none"
                        />
                    </div>
                    <button 
                        id="submitButton"
                        class="bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 px-6 py-3 rounded-xl font-semibold text-white flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed"
                        disabled
                    >
                        <span id="submitIcon" class="w-5 h-5" set:html={SparklesIcon}></span>
                        <span id="submitText">Analisar</span>
                    </button>
                </div>
            </div>

            {/* AI Response */}
            <div id="aiResponseContainer" class="hidden bg-gradient-to-r from-purple-900/30 to-slate-800/30 backdrop-blur-xl border border-purple-400/30 rounded-2xl p-6">
                <div class="flex items-start gap-4">
                    <div class="w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center flex-shrink-0">
                        <span class="w-6 h-6 text-white" set:html={BotIcon}></span>
                    </div>
                    <div class="flex-1">
                        <h4 class="font-semibold text-purple-300 mb-2">IA Tucont</h4>
                        <p id="aiResponseText" class="text-slate-200 leading-relaxed mb-4"></p>
                        <button 
                            id="whatsappButton"
                            class="hidden bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-6 py-3 rounded-xl font-semibold items-center"
                        >
                            <span class="w-5 h-5 mr-2" set:html={MessageIcon}></span>
                            Fale com um especialista pelo WhatsApp
                            <span class="w-5 h-5 ml-2" set:html={ArrowRightIcon}></span>
                        </button>
                    </div>
                </div>
            </div>

            {/* Initial CTA */}
            <div id="initialCTA" class="text-center">
                <p class="text-slate-400 mb-4">
                    Ou fale diretamente com nossa equipe:
                </p>
                <button 
                    id="whatsappInitialButton"
                    class="border border-slate-600 text-slate-300 hover:bg-slate-800/50 px-6 py-3 rounded-xl flex items-center mx-auto"
                >
                    <span class="w-5 h-5 mr-2" set:html={MessageIcon}></span>
                    Conversar no WhatsApp
                </button>
            </div>
        </div>
    </div>
</section>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
    // 1. ISOLAR O COMPONENTE para evitar conflitos de ID
    const wrapper = document.getElementById('interactive-ai-wrapper');
    if (!wrapper) return; // Garante que o script não quebre se o componente não estiver na página

    // 2. DEFINIR VARIÁVEIS DE ÍCONES DENTRO DO ESCOPO DO CLIENTE
    const BotIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 8V4H8"/><rect width="16" height="12" x="4" y="8" rx="2"/><path d="M2 14h2"/><path d="M20 14h2"/><path d="M15 13v2"/><path d="M9 13v2"/></svg>`;
    const SparklesIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/></svg>`;

    // 3. SELECIONAR ELEMENTOS DENTRO DO WRAPPER ISOLADO
    const input = wrapper.querySelector('#aiInput');
    const submitButton = wrapper.querySelector('#submitButton');
    const submitIcon = wrapper.querySelector('#submitIcon');
    const submitText = wrapper.querySelector('#submitText');
    const aiResponseContainer = wrapper.querySelector('#aiResponseContainer');
    const aiResponseText = wrapper.querySelector('#aiResponseText');
    const whatsappButton = wrapper.querySelector('#whatsappButton');
    const whatsappInitialButton = wrapper.querySelector('#whatsappInitialButton');
    const initialCTA = wrapper.querySelector('#initialCTA');
    
    // Configurar dots de carregamento
    const thinkingDots = document.createElement('div');
    thinkingDots.className = 'flex items-center gap-2 text-slate-400';
    thinkingDots.innerHTML = `
        <div class="flex gap-1">
            <div class="w-2 h-2 bg-purple-400 rounded-full animate-bounce"></div>
            <div class="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style="animation-delay: 100ms;"></div>
            <div class="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style="animation-delay: 200ms;"></div>
        </div>
        Processando sua demanda...
    `;

    // Atualizar estado do botão baseado no input
    input.addEventListener('input', () => {
        submitButton.disabled = !input.value.trim();
    });

    // Função principal de submit
    const handleInputSubmit = async () => {
        if (!input.value.trim() || submitButton.disabled) return;
        
        // Atualizar estado do botão para "analisando"
        submitButton.disabled = true;
        submitIcon.innerHTML = BotIcon;
        submitIcon.classList.add('animate-pulse');
        submitText.textContent = 'Analisando...';
        
        // Esconder CTA inicial e mostrar container de resposta com o loader
        initialCTA.style.display = 'none';
        aiResponseContainer.classList.remove('hidden');
        aiResponseText.innerHTML = ''; // Limpa resposta anterior
        aiResponseText.appendChild(thinkingDots);
        whatsappButton.style.display = 'none'; // Esconde o botão do whatsApp enquanto pensa
        
        // Simular resposta da IA
        setTimeout(() => {
            const responses = [
                "Entendi sua demanda! Nossa equipe especializada vai te ajudar a estruturar uma solução completa. Vou conectar você agora mesmo.",
                "Perfeito! Identifiquei que você precisa de nossa Avenida de Negócios. Vou preparar um plano personalizado para você.",
                "Excelente pergunta! Sua situação requer uma análise detalhada. Nossa IA já preparou algumas recomendações iniciais."
            ];
            
            const randomResponse = responses[Math.floor(Math.random() * responses.length)];
            aiResponseText.innerHTML = randomResponse;
            
            // Mostrar botão do WhatsApp e torná-lo flex para aparecer corretamente
            whatsappButton.style.display = 'flex'; 

            // Resetar estado do botão principal
            submitIcon.innerHTML = SparklesIcon;
            submitIcon.classList.remove('animate-pulse');
            submitText.textContent = 'Analisar';
            submitButton.disabled = !input.value.trim(); // Reavalia se o botão deve estar ativo
            
        }, 2500);
    };

    // Função para abrir WhatsApp
    const openWhatsApp = () => {
        const userInput = input.value.trim();
        const message = userInput 
            ? `Olá! Acabei de usar a IA no site da Tucont e minha demanda é: "${userInput}"`
            : "Olá! Quero falar com um especialista da Tucont";
        // Substitua o número de telefone abaixo pelo seu
        window.open(`https://wa.me/5511999999999?text=${encodeURIComponent(message)}`, '_blank');
    };

    // Event listeners
    submitButton.addEventListener('click', handleInputSubmit);
    
    input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            e.preventDefault(); // Evita o comportamento padrão do Enter em formulários
            handleInputSubmit();
        }
    });
    
    whatsappButton.addEventListener('click', openWhatsApp);
    whatsappInitialButton.addEventListener('click', openWhatsApp);
});
</script>

<style is:global>
@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
}

#interactive-ai-wrapper .animate-pulse {
    animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

#interactive-ai-wrapper .animate-bounce {
    animation: bounce 1s infinite;
}
</style>