---
// src/components/HeroSection.astro
import { Image } from 'astro:assets';
---

<section class="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950/50 to-slate-900 relative overflow-hidden flex items-center">
  {/* Background effects */}
  <div class="absolute inset-0">
    <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/10 rounded-full blur-3xl animate-pulse"></div>
    <div class="absolute bottom-1/4 right-1/4 w-80 h-80 bg-orange-500/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-gradient-to-r from-blue-500/5 to-orange-500/5 rounded-full blur-3xl animate-pulse delay-500"></div>
  </div>

  <div class="max-w-7xl mx-auto px-4 py-16 relative z-10">
    <div class="text-center space-y-8">
      
      {/* Badge */}
      <div class="inline-flex items-center gap-2 bg-slate-800/50 backdrop-blur-xl border border-blue-400/30 text-blue-300 px-6 py-3 rounded-full">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
        </svg>
        <span class="font-medium">Plataforma + IA + Mentoria Estratégica</span>
      </div>

      {/* Headlines */}
      <div class="space-y-6">
        <h1 class="text-5xl md:text-7xl font-bold leading-tight">
          <span class="bg-gradient-to-r from-white via-blue-200 to-blue-300 bg-clip-text text-transparent">
            A Primeira Contabilidade Integrativa. Agora é para o seu negócio.
          </span>
        </h1>
        
        <p class="text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed">
          Destrave o empreendedorismo, impulsione sua empresa.
        </p>
      </div>

      {/* User Type Buttons */}
      <div class="flex justify-center gap-4 mb-8">
        <button 
          class="border border-orange-500 text-orange-500 bg-transparent backdrop-blur-sm hover:bg-orange-500/10 hover:border-orange-400 hover:text-orange-400 transition-all duration-300 px-6 py-3 rounded-xl"
        >
          Empreendedor(a)
        </button>
        <button 
          class="border border-orange-500 text-orange-500 bg-transparent backdrop-blur-sm hover:bg-orange-500/10 hover:border-orange-400 hover:text-orange-400 transition-all duration-300 px-6 py-3 rounded-xl"
        >
          Contador(a)
        </button>
      </div>

      {/* AI Input Interface */}
      <div class="max-w-3xl mx-auto space-y-4">
        <div class="relative">
          <div class="flex gap-3 bg-slate-800/50 backdrop-blur-xl border border-slate-700/50 rounded-2xl p-4 shadow-2xl">
            <div class="flex-1">
              <input
                type="text"
                id="aiInput"
                placeholder="Descreva o que você precisa..."
                class="w-full bg-transparent text-white placeholder:text-slate-400 text-lg focus:outline-none"
              />
            </div>
            <button 
              id="submitButton"
              class="bg-gradient-to-r from-blue-500 to-orange-500 hover:from-blue-600 hover:to-orange-600 px-6 py-3 rounded-xl font-semibold text-white flex items-center gap-2"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
              </svg>
              Resolver
            </button>
          </div>
        </div>

        <p class="text-slate-400 text-sm">
          Resposta em minutos • Sem formulários • Sem enrolação
        </p>

        {/* AI Response */}
        <div id="aiResponseContainer" class="hidden bg-gradient-to-r from-blue-900/30 to-slate-800/30 backdrop-blur-xl border border-blue-400/30 rounded-2xl p-6 text-left">
          <div class="flex items-start gap-4">
            <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-orange-500 rounded-full flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
            </div>
            <div class="flex-1">
              <h4 class="font-semibold text-blue-300 mb-2">IA Tucont</h4>
              <p id="aiResponseText" class="text-slate-200 leading-relaxed"></p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  {/* Scroll Indicator */}
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
    <div class="w-6 h-10 border-2 border-slate-600 rounded-full flex justify-center">
      <div class="w-1 h-3 bg-gradient-to-b from-blue-400 to-orange-400 rounded-full mt-2 animate-pulse"></div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const input = document.getElementById('aiInput');
    const submitButton = document.getElementById('submitButton');
    const aiResponseContainer = document.getElementById('aiResponseContainer');
    const aiResponseText = document.getElementById('aiResponseText');
    const thinkingDots = document.createElement('div');
    
    thinkingDots.className = 'flex items-center gap-2 text-slate-400';
    thinkingDots.innerHTML = `
      <div class="flex gap-1">
        <div class="w-2 h-2 bg-blue-400 rounded-full animate-bounce"></div>
        <div class="w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-100"></div>
        <div class="w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-200"></div>
      </div>
      Analisando sua demanda...
    `;

    const handleInputSubmit = async () => {
      if (!input.value.trim()) return;
      
      // Show loading state
      submitButton.innerHTML = `
        <div class="flex items-center gap-2">
          <svg class="w-5 h-5 animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          Pensando...
        </div>
      `;
      submitButton.disabled = true;
      
      // Clear previous response and show container
      aiResponseText.innerHTML = '';
      aiResponseContainer.classList.remove('hidden');
      aiResponseText.appendChild(thinkingDots);
      
      // Simulate AI response
      setTimeout(() => {
        const responses = [
          "Entendi! Vou conectar você com nossa equipe para regularizar sua empresa e criar um plano de crescimento personalizado.",
          "Perfeito! Nossa IA identificou 3 oportunidades de economia fiscal. Vou enviar um especialista via WhatsApp.",
          "Excelente! Seu caso requer nossa Avenida de Negócios. Vou preparar um diagnóstico completo para você."
        ];
        
        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        aiResponseText.innerHTML = randomResponse;
        
        // Reset button
        submitButton.innerHTML = `
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
            </svg>
            Resolver
          </div>
        `;
        submitButton.disabled = false;
      }, 2000);
    };

    submitButton.addEventListener('click', handleInputSubmit);
    
    input.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        handleInputSubmit();
      }
    });
  });
</script>

<style is:global>
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
  
  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .animate-bounce {
    animation: bounce 1s infinite;
  }
  
  .delay-100 {
    animation-delay: 100ms;
  }
  
  .delay-500 {
    animation-delay: 500ms;
  }
  
  .delay-1000 {
    animation-delay: 1000ms;
  }
</style>